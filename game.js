
//creating an empty array to store the correct pattern given by the system or cpu or computer
var gamePattern = [];

//creating an empty array which stores the values clicked by the user
var userClickedPattern = [];

//an array that stores the list of button colors
var buttonColors = ["red", "blue", "green", "yellow"];

//variable which belps in running the nextSequence() function only once while starting the game
var started = false;

//variable storing the initial value of level of the user
var level = 0;

//function that helps in starting the game by making the user to press a key
$(document).keydown(function() {
  if (!started) {
    nextSequence();
    $("#level-title").text("level=" + level);
    started = true;
  }
})


  //annonymous function that stores the values the user clicks in the screen
  $(".btn").click(function() {
    //using---this--- to get id of the element the user clicks
    var userChosenColor = $(this).attr("id");
    //pushing the value of the color of the div the user clicks into the userClickedPattern array
    userClickedPattern.push(userChosenColor);
    //playing the sound corresponding to the div the user has clicked on and adding animations similarly
    playSound(userChosenColor);
    animatePress(userChosenColor);
    //checking the pattern of answers entered by the user with the correct answers given by the computer
    checkAnswer(userClickedPattern.length - 1);//the length of the userClickedPattern array is given as input or parameter to the function
  });



//function that gets the computer to generate the next div to be clicked by user to continue winning the game
function nextSequence() {
  //selecting a random no between 0 and 3
  var randomNumber = Math.floor(Math.random() * 4);
  //storing the color corresponding to random number in buttonColors array in randomChosenColor variable
  var randomChosenColor = buttonColors[randomNumber];
  //pushing the color value into the gamePattern array
  gamePattern.push(randomChosenColor);
  //adding animation to the random div to be added to gamePattern and to be animated as pressing by computer
  $("#" + randomChosenColor).fadeOut(100).fadeIn(100).fadeOut(100).fadeIn(100);
  //playing the sound corresponding to that particular color or div respectively
  playSound(randomChosenColor);
  //incrementing the value of level by one everytime the user goes to the next round
  level++;
  //changing the text of h1 also accordingly
  $("#level-title").text("level=" + level);
  //finally making the userClickedPattern as empty array thus prompting the user to re-enter all the gamePattern values once again
  userClickedPattern=[];
}


//playing the sound as per the div clicked by user or generated by the computer
function playSound(name) {
  var audio = new Audio("sounds/" + name + ".mp3");
  audio.play();
}


//adding animations to the user clicks and to the computer clicks
function animatePress(currentColor) {
  $("#" + currentColor).addClass("pressed");
  setTimeout(function() {
    $("#" + currentColor).removeClass("pressed");
  }, 100);
}


//function that checks if the userClickedPattern matches the gamePattern
function checkAnswer(currentLevel) {
  //checking each value in gamePattern with the vaues in userClickedPattern clicked by user and which also gets initialised after each computer generation of the random color
  if (gamePattern[currentLevel] === userClickedPattern[currentLevel]) {

    if (gamePattern.length === userClickedPattern.length) {
      setTimeout(function() {
        nextSequence();
      }, 1000);
    }
  } else {
    //playing wrong audio and changing css if user entery is wrong
    var wrong=new Audio("sounds/wrong.mp3");
    wrong.play();

    $("body").addClass("game-over");
    setTimeout(function(){
      $("body").removeClass("game-over");
    },200)
    //restarting the game once again if the user has clicked the wrong color
    $("#level-title").text("Game Over, Press Any Key to Restart");
    startOver();
  }
}


//restarting the entire game
function startOver(){
  //initialising the values once again to restart the game
  level=0;
  gamePattern=[];
  started=false;
}
